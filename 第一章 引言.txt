    structured programming (结构化的程序设计方法)
1.2 程设与程序设计语言
    1.2.1 程序与指令
        * 冯.诺伊曼模型 : 程序与数据共同存储的存储程序概念.
        * 计算机程序 : 为解决某种问题用计算机可识别的代码编排一系列数据处理步骤，计算机能严格执行.
    1.2.1 程序设计语言的功能
        * Data Representation (数据表达)
        * Flow Control (控制流程)  
            + 三种基本控制结构 : Seduential Control Structure (顺序控制结构), Branch Control Structure (分支控制结构), Loop Control Structure (循环控制结构). 
    1.2.3 程序设计语言的语法
        * Source Code (源程序[源代码]) : 字符序列.
        * Reserved Words (保留字), Identifier (标识符).
    1.2.4 程序的编译与环境的调用
        * 程序的编辑 : 使用编辑器进行编写程序.
        * 程序的编译 : 使用 Complier (编译器) 生成可执行程序.
        * 程序的调式 : 对程序进行Debug.
        * 编程环境 : 可以完成以上三种步骤的程序设计环境.
1.3 C语言的发展历史与特点
    1.3.1 历史简介 : 在需要一种与硬件不紧密的 High-level programming language 的环境下, 工作于 贝尔实验室 的 Dennis Ritchie 在B语言的基础上设计了 C语言; Dennis Ritchie 与 Ken Thompson 使用汇编编写 UNIX分时操作系统, 
            并于 1973年对 UNIX 进行重写, 其中 90% 以上使用C语言改写.一般来说, 1978年B.W. kernighan 和 Dennis Ritchie 合著的 THE C PROGRAMMING LANGUAGE 是各种C语言的基础, 称之为旧标准C语言; 1983年, ANSI (美国国家标准化协会)
            制定了新的C语言标准, 称 ANSI C.
    1.3.2 特点：
        * C语言是一种结构化语言.
        * C语言语句简洁紧凑、使用方便灵活. 
        * C语言程序易于移植.
        * C语言具有强大的处理能力.
        * 生成目标代码质量高,运行效率高.
1.4 实现问题求解的过程
    1.4.1 问题分析与算法设计
    1.4.2 编写程序
    1.4.3 编译 (生成二进制文件 <*.obj>, 与函数库连接后形成<*.exe> ).
    1.4.4 运行与调式
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    C语言 包括 32 个保留字, 9 种控制语句;
Identifier : 由字母、数字、下划线组成, 第一个字符必须是字母或下划线;
    * Reserved Words : int, float, char, typedef, etc.
    * 用户自定义 Identifier.
    * 常量
    * 运算符
    * 分隔符
C语言中的语法单位 :
    * 表达式
    * 变量定义
    * 语句 ( 表达式语句、分支语句、循环语句、复合语句 )
        + Compound statement (复合语句) : 使用大括号 {} 将一段语句包含在内的语句.
    * 函数的定义与调用
        + 函数头 : 包括函数的 返回值类型、函数名、参数类型.
        + 函数体 : 大括号包含的语句模块.
    * 输入输出

